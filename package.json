{
    "name": "planning-poker",
    "dependencies": {
        "svelte": "^3.55.1"
    },
    "devDependencies": {
        "@babel/preset-env": "^7.20.2",
        "@neoconfetti/svelte": "^1.0.0",
        "@rollup/plugin-commonjs": "^24.0.1",
        "@rollup/plugin-node-resolve": "^15.0.1",
        "@rollup/plugin-terser": "^0.4.0",
        "eslint": "^8.35.0",
        "eslint-plugin-import": "^2.27.5",
        "eslint-plugin-svelte3": "^4.0.0",
        "js-cookie": "^3.0.1",
        "prettier": "^2.8.4",
        "prettier-plugin-svelte": "^2.9.0",
        "rollup": "^3.17.3",
        "rollup-plugin-analyzer": "^4.0.0",
        "rollup-plugin-cleanup": "^3.2.1",
        "rollup-plugin-css-only": "^4.3.0",
        "rollup-plugin-livereload": "^2.0.5",
        "rollup-plugin-svelte": "~7.1.3"
    },
    "scripts": {
        "eslint": "eslint -c package.json --ext .js,.svelte --fix js/",
        "format": "prettier --write --plugin-search-dir=. js/",
        "build": "rollup -c",
        "dev": "rollup -c -w"
    },
    "eslintConfig": {
        "extends": "eslint:recommended",
        "parserOptions": {
            "ecmaVersion": 2020,
            "sourceType": "module"
        },
        "env": {
            "es6": true,
            "browser": true
        },
        "plugins": [
            "svelte3",
            "import"
        ],
        "overrides": [
            {
                "files": [
                    "**/*.svelte"
                ],
                "processor": "svelte3/svelte3"
            }
        ],
        "rules": {
            "indent": [
                "error",
                4,
                {
                    "SwitchCase": 1
                }
            ],
            "linebreak-style": [
                "error",
                "unix"
            ],
            "quotes": [
                "error",
                "single"
            ],
            "semi": [
                "error",
                "always"
            ],
            "no-unsafe-optional-chaining": "error",
            "import/order": [
                "error",
                {
                    "groups": [
                        "builtin",
                        "external",
                        "internal",
                        [
                            "parent",
                            "sibling"
                        ]
                    ],
                    "newlines-between": "always",
                    "alphabetize": {
                        "order": "asc",
                        "caseInsensitive": true
                    }
                }
            ]
        }
    }
}
